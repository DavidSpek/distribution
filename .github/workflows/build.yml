name: build

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - 'main'
  pull_request:

env:
  GHCR_SLUG: ghcr.io/distribution/distribution

permissions:
  contents: read # to fetch code (actions/checkout)

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go:
          - 1.20.8
          - 1.21.1
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go }}
      -
        name: Test
        run: |
          make coverage
      -
        name: Codecov
        uses: codecov/codecov-action@v3
        with:
          directory: ./

  build:
    permissions:
      id-token: write # to write to GHCR
      packages: write # to write to GHCR

    runs-on: ubuntu-latest
    needs:
      - test
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.GHCR_SLUG }}
          ### push on PRs and main
          # ghcr.io/distribution/distribution:pr<number>
          # ghcr.io/distribution/distribution:sha<sha>
          # ghcr.io/distribution/distribution:main
          # ghcr.io/distribution/distribution:edge
          tags: |
            type=ref,event=pr
            type=ref,event=branch
            type=sha
            type=edge
          labels: |
            org.opencontainers.image.title=Distribution
            org.opencontainers.image.description=The toolkit to pack, ship, store, and deliver container content
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build artifacts
        uses: docker/bake-action@v4
        with:
          targets: artifact-all
          provenance: false
      -
        name: Move artifacts
        run: |
          mv ./bin/**/* ./bin/
      -
        name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: registry
          path: ./bin/*
          if-no-files-found: error
      -
        name: Build image
        uses: docker/bake-action@v4
        with:
          files: |
            ./docker-bake.hcl
            ${{ steps.meta.outputs.bake-file }}
          targets: image-all
          push: true
  check-release: # make sure commits are valid for a target branch
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    permissions:
      contents: write # needed since semantic release checks this permission even in dry-run mode
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.base.ref }}
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: install semantic release
        run: npm install -g semantic-release@22.0.5 conventional-changelog-conventionalcommits@7.0.2
      - name: temporarily merge PR branch
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com
          git merge --no-ff origin/${{ github.event.pull_request.head.ref }} --message "${{ github.event.pull_request.title }}"
      - name: semantic release dry run
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          unset GITHUB_EVENT_PATH
          unset GITHUB_ACTIONS
          unset GITHUB_EVENT_NAME
          semantic-release --dry-run --ci false --semantic-version 22.0.5
